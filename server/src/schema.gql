# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  id: Float!
  content: String!
  userId: Float!
  user: User!
  postId: Float!
  post: Post!
}

type Post {
  id: Float!
  title: String!
  content: String!
  userId: Float!
  user: User!
  paginationComments(input: PaginationBaseInput!): PaginationCommentModel!
}

input PaginationBaseInput {
  page: Float = 1
  limit: Float = 10
}

type File {
  id: Float!
  mimetype: String!
  url: String!
  publicId: String!
  userAvatar: User
  userId: Float!
  user: User!
}

type User {
  id: Int!
  avatarId: Int
  avatar: File
  email: String!
  name: String
  posts: [Post!]!
  comments: [Comment!]!
  paginationPosts(input: PaginationBaseInput!): PaginationPostModel!
  paginationComments(input: PaginationBaseInput!): PaginationCommentModel!
}

type PaginationLinksModel {
  first: String
  previous: String
  next: String
  last: String
}

type PaginationMetaModel {
  itemCount: Float!
  totalItems: Float!
  itemsPerPage: Float!
  totalPages: Float!
  currentPage: Float!
}

type PaginationCommentModel {
  items: [Comment!]!
  meta: PaginationMetaModel!
  links: PaginationLinksModel
}

type PaginationPostModel {
  items: [Post!]!
  meta: PaginationMetaModel!
  links: PaginationLinksModel
}

type AuthTokenModel {
  accessToken: String!
  refreshToken: String
}

type Query {
  hello: String!
  getMyInfo: User!
  paginationPost(input: PaginationPostInput!): PaginationPostModel!
  post(id: Float!): Post!
  paginationComment(input: PaginationCommentInput!): PaginationCommentModel!
  comment(id: Float!): Comment!
}

input PaginationPostInput {
  page: Float = 1
  limit: Float = 10
  searchText: String
  userId: Float
}

input PaginationCommentInput {
  page: Float = 1
  limit: Float = 10
  searchText: String
  postId: Float
  userId: Float
}

type Mutation {
  register(input: RegisterInput!): AuthTokenModel!
  login(input: LoginInput!): AuthTokenModel!
  updateUser(input: UpdateUserInput!): User!
  createPost(input: CreatePostInput!): Post!
  createComment(input: CreateCommentInput!): Comment!
}

input RegisterInput {
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  avatar: Upload
  name: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreatePostInput {
  title: String!
  content: String!
}

input CreateCommentInput {
  content: String!
  postId: Float!
}